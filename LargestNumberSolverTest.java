package assign04;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class LargestNumberSolverTest
{
    Integer[] intArrSmall;
    Integer[] intArrMedium;
    Integer[] intArrLarge;
    @BeforeEach
    void setup()
    {
        intArrSmall = new Integer[]{37, 82, 42, 1};
        intArrMedium = new Integer[]{54, 12, 346, 5, 87, 96, 5};
        intArrLarge = new Integer[]{410, 21, 93, 80, 69, 379, 20, 60, 432, 13, 72, 62, 70, 83, 9, 3, 14, 11, 62, 55, 34, 83, 80, 99, 56, 25, 79, 51, 51, 70, 79, 20, 34, 67, 40, 51, 41, 94, 89, 116, 874, 554, 137, 371, 17, 77, 97, 58, 83, 97, 26, 17, 54, 96, 33};
    }

    @Test
    public void insertionSort()
    {
        Integer[] expected = {5, 5, 12, 54, 87, 96, 346};
        LargestNumberSolver.insertionSort(intArrMedium, Integer::compare);

        assertArrayEquals(expected, intArrMedium);
    }

    @Test
    public void findLargestNumberTest()
    {
        assertEquals(new BigInteger("8242371"), LargestNumberSolver.findLargestNumber(intArrSmall));
        assertEquals(new BigInteger("9687555434612"), LargestNumberSolver.findLargestNumber(intArrMedium));
    }

    @Test
    public void testNotAlteredFindLargestNumber()
    {
        var expected = intArrLarge.clone();
        LargestNumberSolver.findLargestNumber(intArrLarge);
        assertArrayEquals(expected, intArrLarge);
    }


    @Test
    public void testFindLargestInt()
    {
        assertEquals(8242371 ,LargestNumberSolver.findLargestInt(intArrSmall));
    }

    @Test
    public void testNotAlteredFindLargestInt()
    {
        var expected = intArrSmall.clone();
        LargestNumberSolver.findLargestInt(intArrSmall);
        assertArrayEquals(expected, intArrSmall);
    }

    @Test
    public void testIntOutOfRangeException()
    {
        assertThrows(OutOfRangeException.class, () -> { LargestNumberSolver.findLargestInt(intArrMedium); });
    }

    @Test
    public void findLargestLongTest()
    {
        assertEquals(8242371L, LargestNumberSolver.findLargestLong(intArrSmall));
        assertEquals(9687555434612L, LargestNumberSolver.findLargestLong(intArrMedium));
    }

    @Test
    public void testNotAlteredFindLargestLong()
    {
        var expected = intArrSmall.clone();
        LargestNumberSolver.findLargestLong(intArrSmall);
        assertArrayEquals(expected, intArrSmall);
    }

    @Test
    public void testLongOutOfRangeException()
    {
        assertThrows(OutOfRangeException.class, () -> { LargestNumberSolver.findLargestInt(intArrLarge); });
    }

    @Test
    public void sumTest()
    {
        BigInteger expected = new BigInteger("9687563676983");
        List<Integer[]> tempList = new ArrayList<>();
        tempList.add(intArrSmall);
        tempList.add(intArrMedium);
        assertEquals(expected, LargestNumberSolver.sum(tempList));
    }

    @Test
    public void testNotAlteredSum()
    {
        List<Integer[]> tempList = new ArrayList<>(), expected = new ArrayList<>();
        tempList.add(intArrSmall);
        expected.add(intArrSmall);
        tempList.add(intArrMedium);
        expected.add(intArrMedium);
        LargestNumberSolver.sum(tempList);

        var exList = expected.iterator();
        var acList = tempList.iterator();

        while (exList.hasNext() && acList.hasNext()) {
            assertArrayEquals(exList.next(), acList.next());
        }

        assertFalse(acList.hasNext());
        assertFalse(exList.hasNext());
    }

    @Test
    public void findKthLargestTest()
    {
        List<Integer[]> tempList = new ArrayList<>();
        Integer[] tempArray1 = {88,51};
        Integer[] tempArray2 = {7, 42, 97};
        tempList.add(tempArray1);
        tempList.add(tempArray2);
        assertArrayEquals(tempArray2, LargestNumberSolver.findKthLargest(tempList, 0));
        assertArrayEquals(tempArray1, LargestNumberSolver.findKthLargest(tempList, 1));
    }

    @Test
    public void findKthLargestOutOfBounds()
    {
        List<Integer[]> tempList = new ArrayList<>();
        Integer[] tempArray1 = {88,51};
        Integer[] tempArray2 = {7, 42, 97};
        tempList.add(tempArray1);
        tempList.add(tempArray2);
        assertThrows(IllegalArgumentException.class, () -> LargestNumberSolver.findKthLargest(tempList, -46513260));
        assertThrows(IllegalArgumentException.class, () -> LargestNumberSolver.findKthLargest(tempList, 562312));
        assertThrows(IllegalArgumentException.class, () -> LargestNumberSolver.findKthLargest(tempList, 2));
    }

    @Test
    public void testNotAlteredFindKthLargest()
    {
        List<Integer[]> tempList = new ArrayList<>(), expected = new ArrayList<>();
        tempList.add(intArrSmall);
        expected.add(intArrSmall);
        tempList.add(intArrMedium);
        expected.add(intArrMedium);
        LargestNumberSolver.findKthLargest(tempList, 0);
        LargestNumberSolver.findKthLargest(tempList, 1);

        var exList = expected.iterator();
        var acList = tempList.iterator();

        while (exList.hasNext() && acList.hasNext()) {
            assertArrayEquals(exList.next(), acList.next());
        }

        assertFalse(acList.hasNext());
        assertFalse(exList.hasNext());
    }

    @Test
    public void readFileNotExist()
    {
        assertEquals(new ArrayList<Integer[]>(), LargestNumberSolver.readFile("skljdkljdsfkjlds"));
    }

    @Test
    public void readFile()
    {
        var actual = LargestNumberSolver.readFile("src/assign04/integers.txt");
        assertArrayEquals(intArrLarge, actual.get(0));
    }

    @Test
    public void testReadFileComplete()
    {
        var list = new ArrayList<Integer[]>();

        list.add(new Integer[] {410, 21, 93, 80, 69, 379, 20, 60, 432, 13, 72, 62, 70, 83, 9, 3, 14, 11, 62, 55, 34, 83, 80, 99, 56, 25, 79, 51, 51, 70, 79, 20, 34, 67, 40, 51, 41, 94, 89, 116, 874, 554, 137, 371, 17, 77, 97, 58, 83, 97, 26, 17, 54, 96, 33});
        list.add(new Integer[] {92, 35, 63, 57, 997, 53, 39, 27, 51, 3, 15, 41, 27, 51, 57, 56, 91, 6, 94, 48, 75, 43, 16, 79, 22, 58, 72, 25, 87, 51, 82, 99, 5, 22, 23, 54, 625, 6798, 78});
        list.add(new Integer[] {56, 78, 62, 38, 544, 42, 63, 81, 59, 28, 98, 971, 78, 14, 54, 26, 70, 32, 62, 72, 22, 12, 35, 35, 88, 42, 87, 74, 51, 92, 88, 71, 69, 14, 87, 10, 5906, 10, 9, 16, 55, 29, 65, 8, 80, 13, 19, 55, 22, 20, 6, 113, 97, 42, 58, 82, 26, 79, 46, 21, 9, 89, 90, 55, 63, 6663, 14, 33, 65, 4, 53, 9, 23, 63, 346, 93, 722, 64, 66, 96, 46, 62, 47, 34, 11, 38, 75, 251, 64, 74, 98, 96, 43});
        list.add(new Integer[] {299, 95, 6, 62, 78, 87, 97, 27, 443, 100, 11, 55, 27, 78, 245, 89, 470, 2, 39, 75, 422, 676, 42, 78, 77, 48, 76, 28, 92, 610, 64, 94, 1362, 3, 16, 29, 749, 64, 89, 6, 41, 836, 83, 24, 18, 47, 90, 42, 52, 87, 70, 68, 78, 38, 76, 16, 18, 27, 84, 34, 28, 5, 12, 490, 24, 92, 11, 42, 19, 60, 73, 43, 14, 35, 99, 3, 39, 27, 5, 93, 53, 23, 25, 90, 65, 37, 75, 88, 21, 90, 28, 6, 55, 15, 57, 8, 48, 836, 39});
        list.add(new Integer[] {62, 42, 20, 69, 56, 45, 71, 57, 27, 97, 96, 78, 54, 73, 49, 7, 15});
        list.add(new Integer[] {67, 10, 45, 31, 61, 17, 59, 68, 93, 46, 52});
        list.add(new Integer[] {98, 5231, 67, 96, 88, 47, 57, 71, 56, 288, 13, 91, 25, 6484, 69, 27, 191, 37, 32, 366, 29, 44, 47, 922, 107, 44, 4});
        list.add(new Integer[] {88, 51});
        list.add(new Integer[] {90, 46, 77, 74, 966, 24, 15, 29, 8, 27, 93, 73, 94, 68, 435, 20, 47, 69, 99, 60, 33, 82, 39, 27, 95, 33, 45, 4, 63, 6, 385, 68, 88, 59, 590, 53, 45, 81, 69, 530, 7404, 80, 95, 44, 71, 62, 43, 74, 18, 17, 97, 34, 2, 47, 20, 49, 75, 25, 28, 99, 42, 85, 45, 32, 75, 21, 53, 15, 4, 94});
        list.add(new Integer[] {314, 87, 19, 3903, 38, 68, 616, 6, 401, 74, 13});
        list.add(new Integer[] {330, 96, 11, 458, 8983, 11, 95, 26, 42, 37, 57, 84, 98});
        list.add(new Integer[] {290, 82, 1, 47, 34, 12, 48, 16, 91, 3814, 27, 99, 56});
        list.add(new Integer[] {98, 98, 65, 43, 27, 16, 76, 4, 37, 100, 92, 10, 28, 86, 94, 100, 17, 577, 14, 21, 73, 66, 72, 86, 50, 27, 83, 56, 62});
        list.add(new Integer[] {92, 89, 39, 7, 21});
        list.add(new Integer[] {71, 42, 21, 24, 1, 30, 91, 76, 67, 27, 796, 7, 20, 23, 55, 15, 56, 22, 8, 23, 82, 27, 8129, 49, 60, 12, 639, 34, 72, 94, 621, 64, 86, 46, 51, 47, 23, 48, 40, 6, 11, 19, 57, 55, 23, 18, 75, 632, 95, 88, 20, 58, 93, 85, 65, 65, 60, 83, 305, 77, 61, 57, 80, 99, 49, 99, 4664, 473, 16, 31, 64, 25, 63, 24, 87, 25, 35, 51, 1, 56, 83, 8, 86, 83, 5, 29, 28, 33, 80, 19, 72, 75, 87, 2, 5, 76, 4});
        list.add(new Integer[] {751, 49, 3, 80, 85, 5, 11, 776, 14, 98, 66, 54, 599, 94, 78, 993, 88, 56, 36, 71, 15, 87, 29, 74, 30, 43});
        list.add(new Integer[] {77, 60, 20, 85, 2952, 16, 12, 674, 20, 100, 29, 30, 84, 78, 2, 4, 54, 26, 7, 65, 58, 63, 92, 980, 44, 19, 95, 65, 277, 674, 77, 65, 67, 99, 33, 24, 24, 57, 20, 45, 22, 35, 447, 78, 53});
        list.add(new Integer[] {22, 63, 1, 9562, 81, 54, 58, 814, 33, 36, 54, 87, 96, 83, 45, 44, 81, 61, 28, 65, 5, 9, 81, 58, 57, 36, 16, 28, 896, 59, 49, 13, 71, 54, 82, 91, 97, 36, 11, 37, 8135, 83, 66, 67, 15, 238, 82, 56, 10, 79, 33, 39, 99, 76, 88, 68, 23, 15, 4, 21, 48, 20, 48, 40, 7716, 76, 67, 9, 41, 85, 68, 30, 12});
        list.add(new Integer[] {46, 65, 75, 84, 42, 20, 3, 53, 90, 33, 83, 26, 6, 31, 9661, 90, 54, 8, 4, 17, 19, 40, 24, 10, 19, 83, 100, 8773, 53, 53, 53, 74, 82, 5, 2});
        list.add(new Integer[] {48, 58, 23, 8, 54, 505, 62, 35, 90, 84, 76, 58, 896, 13, 52, 88, 2, 40, 65, 1});
        list.add(new Integer[] {36, 19, 100, 7942, 46, 2, 25, 15, 9, 62, 53, 8, 38, 75, 90, 4, 19, 1734, 55, 59, 5, 64, 24, 4620, 5, 85, 71, 99, 1974, 86, 47, 95, 28, 88, 53, 85, 23, 86, 18, 5, 100, 10, 21, 84, 2, 68, 71, 92, 30, 73, 8745, 21, 12, 916, 87, 60, 31, 60, 100, 10, 84, 40, 75, 68, 34, 93, 87, 10, 63, 67, 83, 6, 78, 55, 39, 37, 26, 73, 77, 963, 17, 8, 52, 93, 41, 37, 751, 98, 24, 47, 98, 94, 557, 25, 76});
        list.add(new Integer[] {324, 18, 100, 4354, 65, 25, 29, 45, 82, 25, 41, 85, 15, 13, 67, 59, 24, 87, 509, 67, 76, 92, 69, 4, 42});
        list.add(new Integer[] {494, 46, 57, 98, 19, 81, 70, 6, 18, 3, 66, 81, 4, 6, 63, 46, 49, 90, 75, 3, 53, 72, 26, 55, 21, 1, 4, 34, 70, 27, 32, 92, 29, 10, 94, 49, 81, 68, 66, 90, 40, 65, 50, 86});
        list.add(new Integer[] {160, 1049, 75, 53, 97, 45, 268, 8, 46, 9, 62, 22, 40, 7, 73, 64, 73, 79, 390, 38, 670, 17, 85, 81, 40, 2, 82, 34, 85, 55, 37, 50, 30, 47, 15, 95, 28, 67, 100, 71, 12, 58, 93, 53});
        list.add(new Integer[] {55, 59, 271, 84, 16, 348, 12, 35, 78, 22, 90, 73, 33, 100, 520, 70, 52, 71, 2094, 91, 77, 84, 13, 21, 4, 77, 100, 63, 40, 56, 99, 15, 87, 42, 64, 69, 90, 64, 69, 63, 46, 953, 75, 39, 91, 66, 1, 64, 97, 24, 33, 48, 93, 61, 53, 50, 2409, 83, 19, 5, 16, 535, 41, 95, 705, 79, 40, 99, 81, 63, 69, 482, 75, 9063, 15, 73, 51, 74, 10, 21, 43, 76, 95, 21, 59, 81, 24, 96, 62, 60, 4, 3, 86, 8, 593, 38, 4, 70, 36, 524});
        list.add(new Integer[] {84, 83, 16, 94, 39, 78, 96, 37, 49, 94, 49, 66, 19, 21, 98, 69, 49, 83, 50, 23, 70, 100, 51, 60, 55, 24, 649, 17, 106, 97, 2, 96, 8, 69, 32, 512, 53, 38, 1000, 45, 84, 63, 30, 42, 97, 66, 32, 42, 25, 89, 38, 25, 98, 95, 925, 3, 97, 77, 2, 77, 65, 87, 70, 48, 35, 6, 17, 9451, 273, 22, 4, 58, 353, 27, 24, 31, 53, 74, 66, 94, 46, 14, 47, 18, 67, 72, 63, 39, 21});
        list.add(new Integer[] {17, 14, 95, 43, 57, 69, 40, 24, 984, 66, 46, 74, 31, 52, 63, 97, 88, 57, 48, 85, 45, 240, 1, 98, 34, 19, 11, 127, 34, 70});
        list.add(new Integer[] {296, 50, 23, 50, 66, 34, 63, 54, 47, 45, 44, 23, 26, 53, 42, 17, 63, 7512, 14, 1, 2, 100, 100, 10, 22, 4, 35, 43, 35, 71, 982, 19, 10, 53, 7, 47, 17, 11, 69, 4, 38, 18, 47, 68, 79, 1000, 16, 595, 8, 43, 9642, 39, 98, 79, 85, 58, 8, 69, 98, 33, 37, 60, 50, 72, 18, 85, 15, 46, 27, 88, 2115, 11, 35, 10, 50, 90, 18, 98, 470, 42});
        list.add(new Integer[] {25, 99, 64, 86, 55, 75, 46, 70, 96, 37, 7, 8, 26, 51, 40, 79, 46, 30, 36, 95, 10, 95, 74, 42, 27, 29, 91, 79, 90, 68, 76, 30, 70, 100, 70, 78, 5300, 14, 81, 65, 97, 289, 93, 87, 9144, 42, 59, 46, 21, 44, 12, 7, 78, 56, 8692, 99, 33, 69, 28, 530, 27, 80, 784, 7, 90, 89, 5, 98, 55, 48, 611, 3512, 92, 61, 76, 94, 43, 8, 63, 90, 97, 68, 5, 92, 88, 7});
        list.add(new Integer[] {62, 10, 4, 87, 6, 283, 15, 810, 9587, 67, 2, 27, 59, 32, 62, 707, 343, 60, 15, 72, 62, 14, 22, 53, 3, 42, 59, 65, 9, 55, 6, 15, 36, 93, 695, 93, 6, 964, 28, 83, 9, 29, 799, 90, 81, 37, 75, 10, 76, 47, 1, 10, 47, 53});
        list.add(new Integer[] {45, 6, 22, 73, 2, 43, 17, 83, 92, 12, 449, 83, 36, 11, 94, 77, 4, 75, 31, 21, 86, 26, 86, 49, 13, 55, 26, 38, 46, 57, 100, 67, 36, 26, 45, 4, 832, 68, 33, 11, 81});
        list.add(new Integer[] {80, 60, 92, 78, 20, 91, 49, 55, 2525, 13, 22, 53, 30, 72, 48});
        list.add(new Integer[] {70, 31, 42, 90, 16, 940, 43, 34, 14, 57, 41, 9, 13, 83, 46, 65, 42, 34, 998, 48, 5, 35, 9, 4, 79, 276, 75, 44, 49, 73, 10, 21, 41, 20, 71, 78, 55, 81, 69, 75, 74, 59, 20, 5, 75, 13, 54, 8, 53, 22, 41, 83, 15, 476, 19, 79, 43, 48, 31});
        list.add(new Integer[] {88, 257, 97, 879, 73, 26, 53, 80, 88, 5, 867, 13, 9, 15, 95, 50, 39, 71, 73, 92, 53, 60, 78, 35, 35, 53});
        list.add(new Integer[] {98, 69, 95, 57, 34, 63, 36, 64, 1560, 90, 96, 46, 41, 66, 3, 35, 56, 88, 7, 62, 33, 47, 46, 38, 54, 96, 24, 37, 13, 94, 22, 67, 87, 11, 88, 40, 2, 48, 35, 93, 80, 73, 16, 19, 41, 26, 22, 56, 72, 54, 51, 63, 294, 80, 84, 40, 5, 88, 95, 32, 430, 6, 48, 69, 3, 19, 29, 79, 73, 9, 419, 56, 10, 87, 3247, 77, 99, 54, 6});
        list.add(new Integer[] {39, 50, 18, 71, 83, 80, 28, 28, 44, 541, 25, 91, 7, 4, 41, 33, 75, 51, 97, 3, 68, 15, 7, 75, 4106, 69, 10, 18, 52, 29, 65, 45, 79, 10, 38, 53, 1, 30, 56, 24, 80, 81, 43, 35, 971, 35, 593, 52, 84, 88, 68, 40, 78, 70, 4, 52, 15, 2, 71, 9, 99, 80, 4, 61, 49, 17, 95, 88, 79, 37, 17, 426, 14, 32, 42, 69, 4, 58, 73, 81, 56, 34, 47, 74, 75, 988});
        list.add(new Integer[] {75, 86, 77, 76, 11, 45, 11, 8, 91, 58, 44, 81, 43, 42, 50, 5, 792, 42, 79, 30, 99, 85, 100, 74, 44, 1, 67, 23, 44, 65, 21, 25, 6004, 29, 24, 3006, 43, 95, 5, 48, 63, 36, 99, 87, 8, 37, 2, 10, 94, 314, 25, 62, 87, 70, 19, 42, 4971, 8, 1});
        list.add(new Integer[] {80, 44, 67, 10, 41, 519, 69, 33, 569, 3444, 94, 55, 87, 30, 68, 73, 70, 48, 94, 61, 51, 76, 8, 28, 96, 21, 65, 65, 20, 93, 43, 51, 37, 67, 28, 39, 76, 66, 72, 701, 309, 97, 11, 97, 69, 81, 65, 167, 13, 66, 73, 97, 19, 84, 41, 78, 5, 77, 58, 39, 735, 9, 70});
        list.add(new Integer[] {73, 36, 24, 59, 76, 58, 301, 81, 53, 4, 21, 82, 88, 29, 42, 38});
        list.add(new Integer[] {209, 98, 39, 62, 803, 29, 308, 67, 87, 55, 48, 28, 2, 30, 39, 22, 765, 26, 36, 80, 28, 6205, 79, 67, 49, 93, 3008, 19, 32, 23, 11, 74, 86, 11, 72, 69, 19, 84, 130, 88, 98, 275, 66, 49, 61, 84, 94, 29, 80, 82, 76, 23, 5049, 37, 14, 90, 47, 51, 13, 20, 76, 74, 60, 19, 96, 6, 132, 13, 60, 9, 31, 37, 70, 4, 94, 8617, 22, 28, 96, 44, 60, 59, 3, 3, 86, 83, 88, 81, 40, 44, 13, 16, 28, 55, 40, 99, 98});
        list.add(new Integer[] {16, 80, 26, 91, 75, 68, 65, 59, 39, 51, 95, 32, 8324, 35, 25, 391, 49, 38, 490, 86, 46});
        list.add(new Integer[] {19, 63, 97, 47, 72, 41, 86, 2954, 43, 40, 4, 14, 63, 1, 79, 28, 57, 63, 43, 9278, 21, 24, 26, 53, 92, 1, 48, 32, 56, 83, 95, 940, 21, 586, 80, 47, 63, 19, 62, 22, 91, 15, 16, 98, 89, 48, 2481, 100, 45, 496, 41, 78});
        list.add(new Integer[] {13, 91, 19, 16, 40, 547, 44, 81, 82, 88, 19, 20, 15, 41, 55, 33, 71, 52, 3, 40, 33, 24, 99, 20, 832, 98, 345, 100, 36, 62, 93, 25, 77, 10, 76, 81, 24, 94, 72, 53, 23, 82, 77, 16, 8, 95, 41, 513, 91, 18, 5, 92, 51, 26, 17, 61, 16, 93, 115, 15, 80, 92, 21, 926, 40, 42, 86, 8, 59, 16});
        list.add(new Integer[] {44, 49, 63, 79, 49, 5384, 3, 84, 37, 59, 85, 957, 44, 3808, 69, 69, 8, 62, 37, 56, 69, 89, 808, 65, 30, 60, 97, 24, 97, 91, 67, 95, 39, 14, 64, 83, 58, 444, 100, 42, 4576, 33, 1, 67, 56, 30, 719, 539, 69, 71, 82, 8, 44, 36, 80, 7050, 60, 9, 70, 91, 89, 51, 63, 32, 16, 35, 14, 72, 6, 68, 99, 7513, 50, 67, 78, 84, 42, 28, 61, 87, 50, 3, 8, 98});
        list.add(new Integer[] {20, 497, 33, 68, 57, 40, 2, 67, 72, 51, 52, 40, 68, 69, 66, 57, 36, 19, 9, 31, 42, 60, 73, 22, 87, 1, 29, 60, 52, 33, 65, 38, 96, 65, 82, 25, 47, 912, 14, 97, 12, 83, 11});
        list.add(new Integer[] {14, 47, 4, 23, 779, 3, 925, 89, 42, 77, 50, 37, 29, 54, 44, 40, 55, 23, 83, 46, 20, 88, 31, 58, 16, 12, 4, 28, 351, 53, 67, 81, 559, 59, 32, 24, 91, 97, 41, 61, 7, 54, 41, 971, 39, 95, 4, 64, 75, 75, 43, 21, 26, 96, 98, 5, 29, 41, 27, 22, 42, 352, 1658, 5, 415, 6, 28, 8, 98, 32, 18, 11, 12, 26, 5, 53, 91, 131, 9, 23, 858, 90, 59, 41, 50, 8, 25});
        list.add(new Integer[] {90, 36, 9, 31, 60, 1, 13, 93, 35, 97, 393, 67, 71, 131, 84, 70, 51, 5, 71, 19, 2805, 5416, 25, 9, 53, 21, 7, 7, 34, 79, 788, 15, 91, 38, 53, 68, 7, 85, 69, 608, 36});
        list.add(new Integer[] {31, 7, 44, 11, 623, 21});
        list.add(new Integer[] {14, 36, 79, 78, 93, 1440, 30, 6725, 29, 90, 75, 64, 75, 33, 19, 854, 37, 22, 88, 61, 31, 676, 20, 20, 75, 6, 94, 69, 33, 20, 31, 71, 99, 25, 70, 93, 406, 85, 51, 73, 14, 97, 95, 69, 57, 97, 50, 5, 81, 93, 35, 46, 64, 64, 255, 12, 31, 54, 41, 68, 56, 67, 67, 74, 41, 72, 88, 8, 883, 77, 715, 92, 33, 21, 22, 50, 24, 44, 32, 59, 5, 53, 12, 35, 79, 71, 41, 43, 104});
        list.add(new Integer[] {92, 19, 2, 3, 966, 47, 61, 8, 732, 64, 20, 25, 27, 94, 27, 24, 19, 568, 11, 501, 640, 25, 89, 62, 50, 87, 44, 91, 79, 58, 88, 88, 21, 23, 23, 65, 194, 59, 5, 56, 62, 43, 73, 17, 29, 67, 83, 11, 88, 85, 69, 85, 14, 8, 24, 69, 76, 39, 54, 49, 86, 25, 747, 34, 46, 32, 138, 98, 98, 80, 30, 3, 4, 71, 59, 72, 51, 68, 48, 48, 88, 58, 737, 28});
        list.add(new Integer[] {32, 32, 82, 99, 91, 11, 817, 93, 40, 28, 1, 10, 25, 49, 97, 93, 20, 90, 12, 7, 86, 393, 98, 86, 63, 93, 1, 354, 60, 67, 76, 34, 78, 880, 51, 88, 21, 92, 60, 88});
        list.add(new Integer[] {9, 986, 582, 30, 71, 100, 76, 4, 4, 38, 36, 86, 89, 52, 45, 41, 76, 29, 3, 12, 9118, 61, 76, 13, 24, 9, 95, 59, 45, 92, 513, 80, 69, 5, 271, 81, 2, 84, 65, 75, 27, 72, 47, 74, 62, 20, 4, 65, 16, 31, 64, 7, 57});
        list.add(new Integer[] {63, 466, 100, 7, 9524, 76, 90, 68, 89, 85, 92, 1, 40, 96, 19, 60, 21, 49, 64, 77, 59, 4195, 28, 56, 72, 39, 71, 50, 68, 15, 88, 64, 94, 16, 88, 6, 49, 3, 902, 82, 92, 67, 47, 82, 61, 64, 51, 84, 21, 14, 70, 24, 10, 59, 95});
        list.add(new Integer[] {15, 25, 21, 84, 97, 2, 8, 20, 223, 47, 729, 74, 45, 76, 46, 46, 45, 81, 54, 4, 46, 5, 93, 30, 17, 16, 53, 60, 84, 70, 73, 19, 63, 67, 41, 37, 25, 43, 74, 1, 57, 49, 73, 3393, 23, 58, 8601, 13, 9, 24, 31, 15, 949, 13, 3, 35, 87, 35, 78, 41, 25, 67, 56, 84});
        list.add(new Integer[] {52, 36, 6391, 65, 61, 35, 80, 19, 866, 68, 34, 66, 301, 13, 15, 40, 41, 25, 8, 72, 10, 7, 78, 289, 267, 59, 96, 500, 737, 1105, 55, 81, 87, 15, 6, 6});
        list.add(new Integer[] {1, 38, 69, 80, 25, 566, 65, 7, 41, 6, 8619, 64, 312, 28, 43, 22, 18, 74, 27, 48, 14, 3, 34, 99, 33, 8, 7498, 37, 26, 93, 9179, 37, 62, 63, 395, 23, 3, 72, 6, 82, 35, 56, 21, 198, 80, 36, 73, 5, 82, 95, 38, 79, 61, 95, 25, 97, 86, 94, 2484, 47, 795, 59, 67, 39, 50, 43, 967, 99, 4304, 90, 28, 55, 75, 69, 24, 61, 66, 496, 86, 42, 61, 19, 2, 84, 51, 71, 41, 28, 54});
        list.add(new Integer[] {74, 51, 76, 82, 4, 34, 23, 524, 43, 61, 71, 36, 5769, 32, 63, 17, 25, 87, 67, 7, 55, 46, 550, 77, 31, 39, 82, 1899, 14, 7990, 6, 65, 95, 16, 11, 25, 91, 20, 14, 25, 97, 20, 3, 22, 14, 96, 9, 93, 89, 14, 31, 21, 63, 40, 43, 71, 4, 80, 42, 40, 76, 3, 94, 98, 15, 29, 51, 75, 133, 690, 366, 76, 13, 47});
        list.add(new Integer[] {62, 10, 100, 61, 64, 4, 51, 41, 45, 57, 3, 78, 22, 18, 28, 48, 93, 55, 73, 39, 8, 53, 3, 9, 98, 7667, 83, 55, 94, 6, 78, 43, 1, 70, 20, 84, 98, 4, 84, 10, 66, 259, 88, 45, 59, 97, 26, 715, 94, 77, 43, 81, 58, 5, 304, 64, 68, 47, 90, 25, 71, 1, 97, 43, 23, 18, 9537, 33});
        list.add(new Integer[] {3, 89, 31, 67, 74, 139, 46, 79, 61, 74, 280, 47, 41, 42, 90, 85, 31, 97, 92, 89});
        list.add(new Integer[] {14, 13, 9, 82, 351, 80, 36, 75, 9, 55, 51, 8, 59, 72, 79, 71, 55, 70, 85, 98, 30, 88, 7, 26, 88, 66, 17, 18, 83});
        list.add(new Integer[] {18, 14, 620, 8, 34, 98, 76, 63, 65, 592, 13, 76, 29, 117, 58, 1, 18, 36, 811, 28, 38, 29, 88, 72, 39, 38, 75, 10, 12, 99, 89, 13, 23, 67, 72, 38, 68, 8, 54, 99, 72, 3175, 56, 47, 11, 845, 7, 92, 46, 42, 83, 12, 41});
        list.add(new Integer[] {51, 85, 73, 8, 94, 78, 35, 72, 45, 72, 56, 3, 7, 87, 10, 30, 92, 616, 53});
        list.add(new Integer[] {7, 69, 22, 16, 78, 15, 39, 58, 85, 44, 2, 91, 7, 43, 11, 6, 62, 81, 59, 95, 50, 79, 73, 79, 13, 79, 14, 69, 20, 3, 25, 60, 28, 100, 96, 58, 57, 44, 44, 78, 54, 44, 72, 78, 62, 82, 937, 60, 76, 19, 47, 97, 87, 57, 58, 37, 50, 74, 77, 80, 17, 67, 15, 88});
        list.add(new Integer[] {45, 2402, 59, 18, 59, 90, 92, 89, 25, 40, 47, 794, 90, 31, 3, 7, 34, 42, 22, 6, 62, 45, 71, 40, 4, 92, 53, 4793, 86, 37, 479, 44, 65, 935, 16, 66, 35, 87, 66, 39, 7923});
        list.add(new Integer[] {28, 80, 6, 10, 31, 81, 66, 74, 58, 37, 76, 24, 5, 13, 44, 34, 69, 10, 79, 1753, 64, 100, 14, 39, 43, 84, 1755, 68, 79, 22, 6, 60, 19, 99});
        list.add(new Integer[] {38, 67, 90, 57, 100, 884, 5, 109, 63, 26, 24, 37, 33, 26, 53, 89, 2748, 68, 63, 60, 13, 40, 64, 98, 66, 7, 28, 78});
        list.add(new Integer[] {100, 13, 14, 64, 34, 57, 74, 93, 2, 99, 49, 46, 76, 9, 3434, 65, 67, 89, 80, 61, 95, 13, 89, 10, 148, 75, 48, 6, 98, 465, 51, 56, 95, 66, 53, 36, 99, 95, 56, 61, 58, 78});
        list.add(new Integer[] {74, 182, 610, 36, 12, 6665, 18, 32, 847, 36, 54, 49, 954, 4, 92, 23, 93, 100, 83, 36, 35, 2516, 65, 36, 67, 28, 31});
        list.add(new Integer[] {87, 69, 6554, 92, 74, 20, 432, 17, 36, 27, 4, 81, 87, 68, 66, 755, 67, 27, 30, 9419, 1, 69, 100, 29, 93, 64, 86, 41, 72, 100, 45, 80, 82, 15, 327, 93, 77, 25, 41, 48, 79, 76, 13, 910, 75, 29, 77, 70, 76, 73, 19, 14, 28, 17, 38, 59, 30, 81, 31, 56, 28, 32, 64, 23, 49, 29, 2, 5, 95, 55, 8, 74});
        list.add(new Integer[] {927, 93, 4, 8640, 1, 81, 80, 24});
        list.add(new Integer[] {96, 5, 47, 7, 13, 3, 76, 79, 35, 53, 21, 32, 29, 78, 69, 8, 45, 43, 72, 42, 14, 13, 3, 13, 41});
        list.add(new Integer[] {46, 8, 19, 29, 61, 12, 70, 81, 8, 40, 19, 79, 89, 48, 64, 40, 28, 69, 79, 66, 69, 45, 92, 82, 37, 776, 17, 988, 23, 42, 95, 91, 72, 52, 43, 47, 210, 65, 84, 128, 58, 34, 914, 71, 47, 20, 6, 1, 40, 76, 90, 648, 22, 210, 31, 59, 72, 69, 94});
        list.add(new Integer[] {7, 2, 79, 98, 37, 313, 11, 17, 57, 60, 9, 48, 21, 36, 88, 34, 60, 40, 31, 13, 75, 9, 12, 34, 97, 90, 2, 75, 92, 13, 60, 74, 47, 5, 131, 89, 78, 57, 79, 24, 83, 71, 46, 44, 52, 82, 95, 583, 65, 61, 4, 24, 98, 63, 20, 99, 43, 53, 65, 23, 70, 45, 27, 14, 96, 730, 54, 88, 40, 57, 75, 100, 9966, 37, 88, 93, 65, 43, 55, 13, 36, 7, 338, 5, 92, 20, 65, 42, 100, 91, 45, 36, 34, 56, 74, 75});
        list.add(new Integer[] {47, 73, 6});
        list.add(new Integer[] {93, 4, 60, 261, 64, 35, 941, 87, 16, 84, 570, 64, 53, 19, 72, 26, 99, 40, 17, 89, 42, 96, 53, 39, 56, 466, 6, 37, 63, 47, 62, 91, 23});
        list.add(new Integer[] {33, 12, 88, 32, 56, 31, 19, 70, 50, 54, 83, 94, 31, 321, 92, 97, 60, 44, 50, 19, 19, 97, 20, 73, 23, 85, 960, 62, 87, 81, 51, 29, 9, 550, 47, 10, 8, 54, 94, 2, 96, 19, 58, 13, 54, 1, 97, 83, 75, 69, 60, 5, 84, 42, 133, 99, 436, 16, 26, 29, 182, 41, 65, 5948, 62, 21, 48, 88, 49});
        list.add(new Integer[] {51, 14, 96, 210, 965, 69, 54, 42, 72, 339, 76, 852, 79, 75, 62, 1, 17, 12, 91, 70, 17, 5306, 9, 334, 43, 32, 34, 3, 60, 23, 55, 86});
        list.add(new Integer[] {49, 96, 63, 44, 80, 23, 611, 84, 55, 81, 46, 39, 27, 37, 51, 24, 67, 41, 24, 67, 23, 83, 40});
        list.add(new Integer[] {45, 15, 65, 16, 7, 35, 40, 24, 17, 11, 29, 62, 18, 87, 55, 2, 61, 9201, 17, 398, 56, 91, 48, 270, 44, 55, 88, 98, 11, 577, 72, 47, 92, 61, 86, 66, 863, 2, 9, 175, 90, 67, 65, 82, 32, 65, 34, 65, 41, 26, 20, 91, 70, 31, 59});
        list.add(new Integer[] {77, 47, 45, 790, 44, 738, 43, 39, 45, 78, 50, 44, 87, 83, 41, 87, 90, 27, 95, 82, 44, 29, 4, 77});
        list.add(new Integer[] {10, 8, 54, 29, 50, 36, 90, 95, 60, 23, 41, 75, 1153, 57, 20, 33, 51, 14, 35, 9, 2, 37, 70, 880, 98, 1, 5, 95, 59, 71, 29, 91, 44, 37, 84, 46, 59, 904, 52, 32, 87, 74, 52, 7, 20, 9, 29, 53, 53, 85, 49, 54, 73, 33, 68, 55, 30, 99, 45, 72, 89, 83, 69, 69, 95, 3496, 4, 16, 96, 38, 93, 77, 8776, 12, 62, 4472, 64, 10, 49, 42, 41, 15, 15, 96});
        list.add(new Integer[] {37, 65, 188, 39, 6489, 46, 35, 83, 25, 83, 36, 77, 9, 286, 55, 57, 76, 22, 74, 33, 66, 10, 53, 95, 16, 50, 250, 19, 68, 610, 24, 140, 79, 44, 42, 62, 52, 10, 383, 46, 88, 11, 25, 34, 94, 29, 15, 32, 42, 1, 16, 1556, 91, 52, 32, 12, 90, 58, 87, 6, 86, 38, 7, 10, 8, 34, 37, 86, 54, 34, 48, 70, 18, 86, 10, 82, 25, 94, 100});
        list.add(new Integer[] {72, 72, 99, 65, 1, 92, 35, 11, 67, 83, 19, 82, 60, 89, 12, 6, 29, 6, 61, 8, 54, 37, 835, 36, 3626, 5, 90, 34, 60, 80});
        list.add(new Integer[] {90, 19, 52, 90, 62, 3336, 16, 99, 23, 17, 62, 88, 88, 96, 26, 97, 86, 19, 97, 39, 99, 23, 25, 57, 3, 100, 88, 64, 51, 10, 76, 61, 48, 43, 42, 48, 30, 8, 80, 56, 11, 83, 12, 31, 95, 32, 52, 752, 579, 78, 74, 76, 28, 95, 91, 40, 82, 6, 41, 79, 79, 26, 27, 62, 39, 37, 77, 89, 15, 914, 91, 72, 16, 35, 4, 97, 91, 85, 61, 38, 36, 54, 413, 42, 21, 74, 75, 78, 49, 68, 57, 2809, 79, 16, 901, 46, 30, 49, 28, 46});
        list.add(new Integer[] {43, 16, 8, 29, 41, 88, 7, 100, 37, 60, 12, 41, 8, 79, 808, 49, 51, 95, 57, 8887, 34, 73, 37, 32, 369, 6878, 78, 100, 42, 4347, 96, 67, 9, 37, 2, 72, 746, 21, 393, 749, 63, 9, 1910, 840, 19, 44, 35, 6, 91, 78, 99, 52, 79, 76, 85, 61, 21, 12, 84, 25, 13, 46, 73, 76, 35, 80, 43, 11, 52, 75, 41, 5, 5101, 63, 311, 94, 41, 34, 21, 67, 95, 61, 6, 4, 77});
        list.add(new Integer[] {81, 45, 1311, 63, 43, 85, 28, 457, 51, 247, 68, 65, 29, 15, 66, 60, 97, 23, 28, 42, 70, 41, 26, 745, 76, 187, 95, 44, 47, 48, 40, 69, 47, 34, 38, 16, 343, 100, 70, 82, 16, 11, 8, 55, 17, 58, 50, 13, 63, 11, 83, 55, 31, 6, 67, 109, 92, 22, 55, 47, 76, 9, 31, 68, 76, 6, 381, 2, 18, 74, 5, 34, 4, 82, 76, 22, 40, 8, 55, 54, 59, 47, 23, 74, 72, 90, 72});
        list.add(new Integer[] {88, 52, 32, 36, 1, 21, 11});
        list.add(new Integer[] {33, 96, 2, 1, 78, 60, 8, 32, 59, 882, 45, 73, 95, 3285, 10, 56, 6, 10, 7, 23, 54, 19, 46, 29, 24, 73, 56, 973, 13, 63, 53, 29, 55, 26, 90, 17, 43, 20, 46, 91, 86, 95, 27, 14, 30, 9, 16, 22, 23, 27, 58, 56, 12, 40, 41, 3163, 13, 17, 22, 79, 37, 28, 344, 34, 31, 7, 5, 30, 86, 163, 759, 92, 98, 75, 17, 89, 90, 44, 65, 12, 42, 8, 93, 45, 60, 17});
        list.add(new Integer[] {5, 37, 28, 426, 54, 91, 40, 92, 21, 67, 13, 48, 95, 29, 61, 33, 36, 8, 5, 59, 224, 82, 55, 33, 7, 17, 29, 80, 92, 79, 29, 9, 97, 41, 7, 27, 84, 84, 55, 42, 15, 50, 61, 52, 81, 94, 88, 60, 54, 20, 46, 21, 10, 201, 54, 91, 22, 76, 56, 45, 65, 27, 56, 23, 52, 41, 30, 82, 18, 41, 8, 35, 6980, 37, 55, 47, 25, 88, 63, 13, 83, 72, 80, 5, 64, 24, 7, 86, 97, 75, 85, 89, 45, 38});
        list.add(new Integer[] {13, 40, 74, 12, 28});
        list.add(new Integer[] {7, 42, 97});
        list.add(new Integer[] {58, 89, 75, 92, 22, 37, 82, 577, 57, 88, 24, 35});
        list.add(new Integer[] {28, 55, 81, 592, 46, 82, 78, 98, 8, 61, 41, 22, 60, 77, 84, 58, 79, 47, 96, 90, 63, 79, 30, 18, 300, 42, 58, 17, 6, 96, 99, 39, 56, 11, 72, 11, 55, 45, 1, 6, 27, 53, 763, 870, 96, 1, 55});
        list.add(new Integer[] {7740, 6223, 44, 11, 37, 12, 93, 75, 16, 30, 54, 100, 20, 48, 71, 79, 74, 87, 54, 11, 33, 93, 89, 52, 31, 2, 85, 33, 48, 19, 26, 88, 63, 2, 27, 91, 38, 69, 84, 70, 52, 31, 612, 53, 46, 92, 31, 893, 13, 42, 46, 268, 68, 80, 51, 50, 40, 92, 60, 52, 32, 22, 21, 29, 995, 77, 72, 21, 66, 82, 37, 4, 93});
        list.add(new Integer[] {91, 38, 121, 805, 46, 50, 33, 57, 78, 68, 28, 8, 95, 5187, 34, 1, 40, 41, 4, 25, 91, 46, 100, 14, 62, 21, 82});
        list.add(new Integer[] {460, 72, 45, 80, 100, 2, 80, 15, 40, 19, 33, 23, 69, 6, 57, 72, 44, 28, 87, 67, 30, 75, 25, 44, 91, 83, 52, 52, 4, 58, 57, 42, 79, 88, 4, 88, 99, 73, 41, 56, 46, 48, 98, 89, 94, 35});
        list.add(new Integer[] {586, 94, 15, 4326, 165, 98, 36, 84, 71, 18, 89, 86, 434, 53, 30, 75, 71, 84, 17, 77, 27, 78, 74, 97, 65, 33, 100, 56, 14, 91, 78, 91, 11, 81, 23, 2899, 30, 71, 68, 65, 4, 73, 22, 31, 32, 67, 65, 45, 94, 89, 21, 49, 29, 67, 96, 98, 57, 26, 73, 12, 89, 52, 2, 74, 33, 48, 7759, 974, 40});
        list.add(new Integer[] {99, 24, 2753, 85, 55, 62, 19, 49});
        list.add(new Integer[] {31, 13, 20, 25, 5, 282, 100, 2635, 26, 57, 939, 14, 22, 17, 66, 41, 35, 38, 10, 77, 27, 85, 45, 98, 29, 23, 77, 45, 12, 54, 70, 96, 10, 29, 8, 45, 65, 40, 70, 26, 73, 25, 8, 85});
        list.add(new Integer[] {10, 8, 31, 782, 34, 80, 84, 90, 9264, 18, 83, 82, 15, 36, 9, 78, 36, 243, 63, 567, 53, 59, 39, 49, 86, 63, 99, 34, 89, 38, 43, 13, 627, 23, 47, 25, 74, 38, 39, 94, 3, 57, 61, 5, 71, 12, 47, 58, 20, 57, 35, 3, 470, 94, 48, 91, 100, 66, 204});


        var actual = LargestNumberSolver.readFile("src/assign04/integers_short.txt");

        var itList = list.iterator();
        var acList = actual.iterator();

        while (itList.hasNext() && acList.hasNext()) {
            assertArrayEquals(itList.next(), acList.next());
        }

        assertFalse(acList.hasNext());
        assertFalse(itList.hasNext());
    }


}